name: Deploy
run-name: Deploy

on:
  workflow_call:
    inputs:
      target_tag:
        required: true
        type: string
        description: 'The deployment target tag, e.g. prod-latest or dev-latest'
      target_env:
        required: true
        type: string
        description: 'The deployment environment e.g. production or development'

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: ${{ inputs.target_env }}
    steps:
      - name: Set up SSH key
        # Sets up the SSH key for the server.
        run: |
          # Create the .ssh directory if it doesn't exist.
          mkdir -p ~/.ssh
          # Write the SSH private key to file.
          echo "${{ secrets.DEPLOYMENT_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          # Add the server to known_hosts to avoid authenticity prompts.
          ssh-keyscan -H ${{ secrets.DEPLOYMENT_SERVER }} >> ~/.ssh/known_hosts

      - name: Upload deployment files to server
        # Creates project directory and uploads required files to server
        run: |
          if [ "${{ inputs.target_tag }}" = "prod-latest" ]; then
            scp -o StrictHostKeyChecking=no docker-compose.prod.yml ${{ secrets.DEPLOYMENT_SSH_USER }}@${{ secrets.DEPLOYMENT_SERVER }}:/opt/rcb-deployments/${{ vars.PROJECT_NAME }}/docker-compose.override.yml
            scp -o StrictHostKeyChecking=no honeycomb.toml ${{ secrets.DEPLOYMENT_SSH_USER }}@${{ secrets.DEPLOYMENT_SERVER }}:/opt/rcb-deployments/${{ vars.PROJECT_NAME }}/honeycomb.toml
          else
            scp -o StrictHostKeyChecking=no docker-compose.dev.yml ${{ secrets.DEPLOYMENT_SSH_USER }}@${{ secrets.DEPLOYMENT_SERVER }}:/opt/rcb-deployments/${{ vars.PROJECT_NAME }}/docker-compose.override.yml
          fi

          echo "$APPLICATION_ENV_FILE" > .env

          ssh -o StrictHostKeyChecking=no ${{ secrets.DEPLOYMENT_SSH_USER }}@${{ secrets.DEPLOYMENT_SERVER }} "mkdir -p /opt/rcb-deployments/${{ vars.PROJECT_NAME }}"
          scp -o StrictHostKeyChecking=no docker-compose.yml ${{ secrets.DEPLOYMENT_SSH_USER }}@${{ secrets.DEPLOYMENT_SERVER }}:/opt/rcb-deployments/${{ vars.PROJECT_NAME }}/docker-compose.yml
          scp -o StrictHostKeyChecking=no .env ${{ secrets.DEPLOYMENT_SSH_USER }}@${{ secrets.DEPLOYMENT_SERVER }}:/opt/rcb-deployments/${{ vars.PROJECT_NAME }}/.env
          scp -o StrictHostKeyChecking=no scripts/deploy.sh ${{ secrets.DEPLOYMENT_SSH_USER }}@${{ secrets.DEPLOYMENT_SERVER }}:/opt/rcb-deployments/${{ vars.PROJECT_NAME }}/deploy.sh


      - name: Deploy to VPS
        # Deploys to VPS.
        run: |
          OWNER="${{ vars.GHCR_OWNER }}"
          REPO="${{ github.event.repository.name }}"
          IMAGE="ghcr.io/$OWNER/$REPO:${{ inputs.target_tag }}"
          echo "Deploying $IMAGE to VPS..."
          ssh -o StrictHostKeyChecking=no ${{ secrets.DEPLOYMENT_SSH_USER }}@${{ secrets.DEPLOYMENT_SERVER }} "\
            export PROJECT_NAME='${{ vars.PROJECT_NAME }}' && \
            export DEPLOY_ENV='${{ inputs.target_env }}' && \
            export GHCR_USER='${{ secrets.MACHINE_USER }}' && \
            export GHCR_PAT='${{ secrets.MACHINE_PAT }}' && \
            export APPLICATION_IMAGE='$IMAGE' && \
            /opt/rcb-deployments/${{ vars.PROJECT_NAME }}/deploy.sh $IMAGE"
